---
title: Installing PKS on AWS
owner: PKS
iaas: AWS
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal Container Service (PKS) on Amazon Web Services (AWS).

##<a id='prerequisites'></a>Prerequisites

Before performing the procedures in this topic, you must have deployed and configured Ops Manager.
For more information, see [AWS Prerequisites and Resource Requirements](aws-requirements.html).

<%= partial 'prerequisites' %>

##<a id='install'></a> Step 1: Install PKS

<%= partial 'install-pks' %>

##<a id='configure'></a> Step 2: Configure PKS

Click the orange **Pivotal Container Service** tile to start the configuration process.

![Pivotal Container Service tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

###<a id='azs-networks'></a> Assign AZs and Networks

<%= partial 'azs-networks' %>

###<a id='pks-api'></a> PKS API

<%= partial 'pks-api' %>

###<a id='plans'></a> Plans

<%= partial 'plans' %>

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

To configure your Kubernetes cloud provider settings, follow the procedures below:

1. Click **Kubernetes Cloud Provider**.

1. Under **Choose your IaaS**, select **AWS**.

    <img src="images/cloud-aws.png" alt="AWS pane configuration" width="325">

1. Enter your **AWS Master Instance Profile IAM**. This is the instance profile name associated with the master node. For information about configuring this account, see [Create the Master Node Instance Profile](aws-prepare-env.html#create-master).

1. Enter your **AWS Worker Instance Profile IAM**. This is the instance profile name associated with the worker node. For information about configuring this account, see [Create the Worker Node Instance Profile](aws-prepare-env.html#create-worker).

1. Click **Save**.

###<a id='syslog'></a> (Optional) Logging

<%= partial 'logging' %>

###<a id='networking'></a> Networking

To configure networking, do the following:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
  <img src="images/networking-flannel.png" alt="Networking pane configuration" width="425">
1. (Optional) Configure the CIDR range for the Kubernetes Service Network and Kubernetes Pod Network.
		<p class="note"><strong>Note</strong>: Ensure that the CIDR ranges do not overlap and have sufficient space for your deployed services.</p>
		<p class="note"><strong>Note</strong>: For the Pod Network, ensure that the CIDR range is large enough to accommodate the expected max number of pods</p>
1. (Optional) If you do not use a NAT instance, select **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**. Enabling this functionality assigns external IP addresses to VMs in clusters.

1. Click **Save**.

###<a id='uaa'></a> UAA

<%= partial 'uaa' %>

###<a id='monitoring'></a> (Optional) Monitoring

<%= partial 'monitoring' %>

###<a id='usage'></a> Usage Data

<%= partial 'usage-data' %>

###<a id='errands'></a> Errands

<%= partial 'errands' %>

###<a id='resource-config'></a> Resource Config

To modify the resource usage of PKS and specify your PKS API load balancer, follow the steps below:

1. Select **Resource Config**.

1. In the **Load Balancers** column, enter the name of your PKS API load balancer. You named the load balancer in the [Create and Configure a Load Balancer](aws-api-load-balancer.html#create) step of _Creating an AWS Load Balancer for the PKS API_.

1. (Optional) Edit other resources used by the **Pivotal Container Service** job.

    ![Resource pane configuration](images/aws-resources.png)

<p class="note"><strong>Note</strong>: If you experience timeouts or slowness when interacting with the PKS API, select a <strong>VM Type</strong> with greater CPU and memory resources for the <strong>Pivotal Container Service</strong> job.</p>

##<a id='apply-changes'></a> Step 3: Apply Changes

<%= partial 'apply-changes' %>

##<a id='retrieve-pks-api'></a> Step 4: Retrieve the PKS API Endpoint

<%= partial 'share-endpoint' %>

##<a id='next-steps'></a> Next Steps

After installing PKS on AWS, you may want to do one or more of the following:

* [Install the PKS and Kubernetes CLIs](#clis)
* [Configure PKS API Access](#api)
* [Configure Authentication for PKS](#auth)

### <a name='clis'></a> Install the PKS and Kubernetes CLIs

<%= partial 'install-cli' %>

### <a name='api'></a> Configure PKS API Access

Follow the procedures in [Configuring PKS API Access](configure-api.html).

### <a name='auth'></a> Configure Authentication for PKS

<%= partial 'configure-auth' %>
