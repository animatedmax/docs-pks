---
title: Installing PKS on vSphere
owner: PKS
iaas: vSphere
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal Container Service (PKS) on vSphere.

##<a id='prerequisites'></a>Prerequisites

Before performing the procedures in this topic, you must have deployed and configured Ops Manager.
For more information, see [vSphere Prerequisites and Resource Requirements](vsphere-requirements.html).

<%= partial 'prerequisites' %>

##<a id='install'></a> Step 1: Install PKS

<%= partial 'install-pks' %>

##<a id='configure'></a> Step 2: Configure PKS

Click the orange **Pivotal Container Service** tile to start the configuration process.

![Pivotal Container Service tile on the Ops Manager installation dashboard](images/pks-tile-orange.png)

###<a id='azs-networks'></a> Assign AZs and Networks

<%= partial 'azs-networks' %>

###<a id='pks-api'></a> PKS API

<%= partial 'pks-api' %>

###<a id='plans'></a> Plans

<%= partial 'plans' %>

###<a id='cloud-provider'></a> Kubernetes Cloud Provider

<%= partial 'cloud-provider' %>

###<a id='syslog'></a> (Optional) Logging

<%= partial 'logging' %>

###<a id='networking'></a> Networking

To configure networking, do the following:

1. Click **Networking**.
1. Under **Container Networking Interface**, select **Flannel**.
//TODO change image
  <img src="images/networking-flannel.png" alt="Networking pane configuration" width="425">
1. (Optional) Configure the CIDR range for the Kubernetes Service Network and Kubernetes Pod Network.
    <p class="note"><strong>Note</strong>: Ensure that the CIDR ranges do not overlap and have sufficient space for your deployed services.</p>
    <p class="note"><strong>Note</strong>: For the Pod Network, ensure that the CIDR range is large enough to accommodate the expected max number of pods</p>
1. (Optional) Configure a global proxy for all outgoing HTTP and HTTPS traffic from your Kubernetes clusters.  This setting will not set the proxy for running Kubernetes workloads or pods.
<br><br>
Production environments can deny direct access to public Internet services and between internal services by placing an HTTP or HTTPS proxy in the network path between Kubernetes nodes and those services.
<br><br>
If your environment includes HTTP or HTTPS proxies, configuring PKS to use these proxies allows PKS-deployed Kubernetes nodes to access public Internet services and other internal services. Follow the steps below to configure a global proxy for all outgoing HTTP/HTTPS traffic from your Kubernetes clusters:
  1. Under **HTTP/HTTPS proxy**, select **Enabled**.
      <img src="images/networking-https-proxy.png" alt="Networking pane configuration" width="325">
  1. Under **HTTP Proxy URL**, enter the URL of your HTTP/HTTPS proxy endpoint. For example, `http://myproxy.com:1234`.
  1. (Optional) If your proxy uses basic authentication, enter the username and password under **HTTP Proxy Credentials**.
  1. Under **No Proxy**, enter the service network CIDR where your PKS cluster is deployed. List any additional IP addresses that should bypass the proxy.
    <p class="note"><strong>Note</strong>: By default, the <code>.internal</code>, <code>10.100.0.0/8</code>, and <code>10.200.0.0/8</code> IP address ranges are not proxied. This allows internal PKS communication.</p>
1. Under **Allow outbound internet access from Kubernetes cluster vms (IaaS-dependent)**, ignore the **Enable outbound internet access** checkbox.
1. Click **Save**.

###<a id='uaa'></a> UAA

<%= partial 'uaa' %>

###<a id='monitoring'></a> (Optional) Monitoring

<%= partial 'monitoring' %>

###<a id='usage'></a> Usage Data

<%= partial 'usage-data' %>

###<a id='errands'></a> Errands

<%= partial 'errands' %>

###<a id='resource-config'></a> Resource Config

To modify the resource usage of PKS, click **Resource Config** and edit the **Pivotal Container Service** job.

![Resource pane configuration](images/resources.png)

<p class="note"><strong>Note</strong>: If you experience timeouts or slowness when interacting with the PKS API, select a <strong>VM Type</strong> with greater CPU and memory resources for the <strong>Pivotal Container Service</strong> job.</p>

## <a id='apply-changes'></a> Step 3: Apply Changes

<%= partial 'apply-changes' %>

##<a id='retrieve-pks-api'></a> Step 4: Retrieve the PKS API Endpoint

<%= partial 'share-endpoint' %>

## <a id='loadbalancer-pks-api'></a> Step 5: Configure External Load Balancer

After you install the PKS tile, configure an external load balancer to access the PKS API from outside the network.
You can use any external load balancer.

Your external load balancer forwards traffic to the PKS API endpoint on ports 8443 and 9021.
Configure the external load balancer to resolve to the domain name you set in the [PKS API](#pks-api) section of the tile configuration.

Configure your load balancer with the following information:

- IP address from [Retrieve PKS API Endpoint](#retrieve-pks-api)
- Ports 8443 and 9021
- HTTPS or TCP protocol

##<a id='next-steps'></a> Next Steps

After installing PKS on vSphere, you may want to do one or more of the following:

* [Install the PKS and Kubernetes CLIs](#clis)
* [Configure PKS API Access](#api)
* [Configure Authentication for PKS](#auth)
* [Integrate VMware Harbor with PKS](#harbor)

### <a name='clis'></a> Install the PKS and Kubernetes CLIs

<%= partial 'install-cli' %>

### <a name='api'></a> Configure PKS API Access

Follow the procedures in [Configuring PKS API Access](configure-api.html).

### <a name='auth'></a> Configure Authentication for PKS

<%= partial 'configure-auth' %>

### <a name='harbor'></a> Integrate VMware Harbor with PKS

<%= partial 'harbor' %>
